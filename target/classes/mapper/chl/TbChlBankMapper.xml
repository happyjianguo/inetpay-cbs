<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ylink.inetpay.cbs.chl.dao.TbChlBankMapper" >
  <resultMap id="BaseResultMap" type="com.ylink.inetpay.common.project.channel.dto.TbChlBank" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Nov 12 11:25:23 CST 2016.
    -->
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="BANK_TYPE" property="bankType" jdbcType="CHAR" />
    <result column="BANK_NAME" property="bankName" jdbcType="VARCHAR" />
    <result column="BANK_LOGO_PATH" property="bankLogoPath" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="CHANNEL_CODE" property="channlCode" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, BANK_TYPE, BANK_NAME, BANK_LOGO_PATH, REMARK
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from TB_CHL_BANK
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <select id="getBanks" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from TB_CHL_BANK
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from TB_CHL_BANK
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ylink.inetpay.common.project.channel.dto.TbChlBank" >
    insert into TB_CHL_BANK (ID, BANK_TYPE, BANK_NAME, 
      BANK_LOGO_PATH, REMARK)
    values (#{id,jdbcType=VARCHAR}, #{bankType,jdbcType=CHAR}, #{bankName,jdbcType=VARCHAR}, 
      #{bankLogoPath,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ylink.inetpay.common.project.channel.dto.TbChlBank" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Nov 12 11:25:23 CST 2016.
    -->
    insert into TB_CHL_BANK
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="bankType != null" >
        BANK_TYPE,
      </if>
      <if test="bankName != null" >
        BANK_NAME,
      </if>
      <if test="bankLogoPath != null" >
        BANK_LOGO_PATH,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="bankType != null" >
        #{bankType,jdbcType=CHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankLogoPath != null" >
        #{bankLogoPath,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ylink.inetpay.common.project.channel.dto.TbChlBank" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Nov 12 11:25:23 CST 2016.
    -->
    update TB_CHL_BANK
    <set >
      <if test="bankType != null" >
        BANK_TYPE = #{bankType,jdbcType=CHAR},
      </if>
      <if test="bankName != null" >
        BANK_NAME = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankLogoPath != null" >
        BANK_LOGO_PATH = #{bankLogoPath,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ylink.inetpay.common.project.channel.dto.TbChlBank" >
    update TB_CHL_BANK
    set BANK_TYPE = #{bankType,jdbcType=CHAR},
      BANK_NAME = #{bankName,jdbcType=VARCHAR},
      BANK_LOGO_PATH = #{bankLogoPath,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <select id="findListPage" resultMap="BaseResultMap" parameterType="com.ylink.inetpay.common.project.channel.dto.TbChlBank" >
    select 
    <include refid="Base_Column_List" />
    from TB_CHL_BANK
    <where> 1=1
   
    <if test="allBank != null and allBank !=''">
    	(and  BANK_TYPE  not like concat('0','%')
    	or BANK_TYPE ='001')
    </if>
    <if test="bankType != null and bankType !=''">
    	and BANK_TYPE like concat('%',concat(#{bankType,jdbcType=CHAR}),'%')
    </if>
    <if test="bankName != null and bankName !=''">
    	and instr(BANK_NAME, #{bankName}) > 0
    	<!-- and BANK_NAME like CONCAT('%',#{bankName},'%') -->
    </if>
    
    </where>
  </select>
  
  <!-- 银行编号 -->
  <select id="findPayerBankType" resultMap="BaseResultMap" >
    select 
    BANK_TYPE
    from TB_CHL_BANK
    <where> 1=1
    <if test="payBankType != null and payBankType !=''">
    	and instr(BANK_NAME, #{payBankType}) > 0
    </if>
    </where>
  </select>
  
   <select id="getInnerBanks" resultMap="BaseResultMap" parameterType="com.ylink.inetpay.common.project.channel.dto.TbChlBank" >
    select 
    <include refid="Base_Column_List" />
    from TB_CHL_BANK
    <where>
    <if test="bankType != null and bankType !=''">
     and instr(BANK_TYPE, #{bankType,jdbcType=CHAR}) > 0
     <!-- and BANK_TYPE = #{bankType,jdbcType=CHAR} -->
    </if>
    <if test="bankName != null and bankName !=''">
     and instr(BANK_NAME, #{bankName}) > 0
    <!-- and BANK_NAME like CONCAT('%',#{bankName},'%') -->
    </if>
     and BANK_TYPE not like '0%'
    </where>
    order by BANK_TYPE asc,ID asc
  </select>
  <!--对外查询银行接口-->
   <select id="getList" resultMap="BaseResultMap" parameterType="com.ylink.inetpay.common.project.channel.dto.TbChlBank" >
    select 
    <include refid="Base_Column_List" />
    from TB_CHL_BANK
    <where> 
   		 (BANK_TYPE  not like concat('0','%')
    	 or BANK_TYPE ='001')
    <if test="bankType != null and bankType !=''">
    	and BANK_TYPE = #{bankType,jdbcType=CHAR}
    </if>
    <if test="bankName != null and bankName !=''">
    	and instr(BANK_NAME, #{bankName}) > 0
    	<!-- and BANK_NAME like CONCAT('%',#{bankName},'%') -->
    </if>
    </where>
       order by BANK_TYPE asc
  </select>
    <select id="getBankByBankType" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from TB_CHL_BANK
    <where> 
   		1=1
    <if test="bankType != null and bankType !=''">
    	and BANK_TYPE = #{bankType,jdbcType=CHAR}
    </if>
    </where>
  </select>
  <select id="getBankType" resultMap="BaseResultMap" parameterType="com.ylink.inetpay.common.project.channel.dto.TbChlBank" >
  		 SELECT distinct b.BANK_NAME ,b.BANK_TYPE from TB_CHL_BANK_ACCOUNT a left join 
  		 TB_CHL_BANK b on a.BANK_TYPE=b.BANK_TYPE
  		 where  (b.BANK_TYPE  not like concat('0','%')
    	 or b.BANK_TYPE ='001')
  </select>
  <select id="getChannels" resultMap="BaseResultMap" parameterType="com.ylink.inetpay.common.project.channel.dto.TbChlBank" >
  		 SELECT distinct b.BANK_NAME ,b.BANK_TYPE from TB_CHL_BANK_ACCOUNT a left join 
  		 TB_CHL_BANK b on a.BANK_TYPE=b.BANK_TYPE
  </select>
  
   <select id="findByBankTypes" resultMap="BaseResultMap" parameterType="java.util.List">
  	SELECT <include refid="Base_Column_List" />
  	FROM TB_CHL_BANK
    WHERE BANK_TYPE IN
    <foreach collection="list" item="item" open="(" close=")" separator=",">
    	#{item}
    </foreach>
  </select>
  <select id="findByBankTypeSet" resultMap="BaseResultMap">
  	SELECT <include refid="Base_Column_List" />
  	FROM TB_CHL_BANK
    WHERE BANK_TYPE IN
    <foreach collection="bankTypes" item="item" open="(" close=")" separator=",">
    	#{item}
    </foreach>
  </select>
   <select id="findListByChannelType" resultMap="BaseResultMap" parameterType="com.ylink.inetpay.common.project.channel.dto.TbChlBank" >
  		 SELECT a.BANK_TYPE as bankType from TB_CHL_CHANNEL a 
  		 where a.CHANNEL_TYPE = #{channelType}
  		 AND a.CHANNEL_STATUS = '1'
  </select>
   <select id="findByChltypeAndbankType" resultMap="BaseResultMap" parameterType="com.ylink.inetpay.common.project.channel.dto.TbChlBank" >
  		SELECT b.*, a.CHANNEL_CODE from tb_chl_channel a ,
  		 TB_CHL_BANK b where a.BANK_TYPE=b.BANK_TYPE
  		 AND a.CHANNEL_TYPE = #{channelType} AND a.BANK_TYPE = #{bankType}
  </select>
</mapper>